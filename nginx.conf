pcre_jit on;
worker_processes auto;

events { 
    worker_connections 1024; 
}

http {    
    access_log /dev/stdout;
    error_log /dev/stderr;
    server_names_hash_bucket_size 64;

    upstream ecommerce.local {
        server e-commerce-poc-net-task-ecommerce-1:80;
        server e-commerce-poc-net-task-ecommerce-2:80;
        server e-commerce-poc-net-task-ecommerce-3:80;           
    }      
        
    map $http_upgrade $connection_upgrade {
        default Upgrade;
        ''      close;
    }

    server {
        listen 80;
        server_name   ecommerce.local;

        location / {
            proxy_pass http://ecommerce.local; 
            proxy_read_timeout  90;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;           
            proxy_cache_bypass $http_upgrade;            
        }

        #Health
        location /api/health/1 {
            proxy_pass http://e-commerce-poc-net-task-ecommerce-1:80/api/health;
            proxy_pass_request_headers off;
        }

        location /api/health/2 {
            proxy_pass http://e-commerce-poc-net-task-ecommerce-2:80/api/health;
            proxy_pass_request_headers off;
        }

        location /api/health/3 {
            proxy_pass http://e-commerce-poc-net-task-ecommerce-3:80/api/health;
            proxy_pass_request_headers off;
        }       

        location /api/health{
            content_by_lua_block {   
                local cjson = require "cjson"

                ngx.header["Content-Type"] = "application/json";

                res1 = ngx.location.capture("/api/health/1")                
                res2 = ngx.location.capture("/api/health/2")                
                res3 = ngx.location.capture("/api/health/3")                                          

                result = {
                    ecommerce_1 = cjson.decode(res1.body),
                    ecommerce_2 = cjson.decode(res2.body),
                    ecommerce_3 = cjson.decode(res3.body),                    
                }

                ngx.print(cjson.encode(result))
            }
        }

        #Metrics
        location /api/metrics/1 {
            proxy_pass http://e-commerce-poc-net-task-ecommerce-1:80/metrics;
            proxy_pass_request_headers off;
        }

        location /api/metrics/2 {
            proxy_pass http://e-commerce-poc-net-task-ecommerce-2:80/metrics;
            proxy_pass_request_headers off;
        }

        location /api/metrics/3 {
            proxy_pass http://e-commerce-poc-net-task-ecommerce-3:80/metrics;
            proxy_pass_request_headers off;
        }                 

        location /metrics{
            content_by_lua_block {   
                local cjson = require "cjson"

                ngx.header["Content-Type"] = "application/json";

                res1 = ngx.location.capture("/api/metrics/1")                
                res2 = ngx.location.capture("/api/metrics/2")                
                res3 = ngx.location.capture("/api/metrics/3")                                       

                result = {
                    ecommerce_1 = res1.body,
                    ecommerce_2 = res2.body,
                    ecommerce_3 = res3.body,                    
                }

                ngx.print(cjson.encode(result))
            }
        }
    }
}